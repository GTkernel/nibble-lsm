/*
 * Nibble - Concurrent Log-Structured Memory for Many-Core Key-Value Stores
 *
 * (c) 2017 Hewlett Packard Enterprise Development LP.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the
 * GNU Lesser General Public License as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version. This program is distributed in the hope that
 * it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with this program.
 * If not, see <http://www.gnu.org/licenses/>. As an exception, the copyright holders of this Library
 * grant you permission to (i) compile an Application with the Library, and (ii) distribute the Application
 * containing code generated by the Library and added to the Application during this compilation process
 * under terms of your choice, provided you also meet the terms and conditions of the Application license.
 */


#! /usr/bin/env zsh
set -u
set -e

echo '';echo '[date]'; date
echo '';echo '[uname]'; uname -a
echo '';echo '[uptime]'; uptime
echo '';echo '[who]'; who
echo '';echo '[ulimit]'; ulimit -a

echo '';echo '[env]'; env

echo '';echo '[rustc]'; rustc --version --verbose
echo '';echo '[clang++]'; clang++ --version
echo '';echo '[g++]'; g++ --version
if [ -e Makefile ]; then
    echo '';echo '[Makefile]'; cat Makefile
fi
if [ -e Cargo.toml ]; then
    echo ''; echo '[Cargo.toml]'; cat Cargo.toml
fi

echo '';echo '[cpu]'; grep 'model name' /proc/cpuinfo | head -n 1
echo '';echo '[sockets=cores]';
num_sockets=$(awk -F '-' '{print $NF}' < /sys/devices/system/node/possible)
num_sockets=$((num_sockets+1))
cores_per_socket=$(cut -d ',' -f 1 < /sys/devices/system/node/node0/cpulist | awk -F '-' '{print $NF}')
cores_per_socket=$((cores_per_socket+1))
echo "num sockets: $num_sockets"
echo "cores per socket: $cores_per_socket"
for ((sock=0;sock<$num_sockets;sock++)); do
    echo -n "socket ${sock} "
    cat /sys/devices/system/node/node${sock}/cpulist
done
echo ''; echo '[cpu detail]';
n=$(grep -n 'power management' /proc/cpuinfo | head -n 1 | cut -d ':' -f1)
sed -n 1,${n}p < /proc/cpuinfo

echo '';echo '[meminfo]'; head /proc/meminfo

echo '';echo '[nr HP]'
echo -n '2MB huge pages: '
cat /sys/kernel/mm/hugepages/hugepages-2048kB/nr_hugepages
echo -n '1GB huge pages: '
cat /sys/kernel/mm/hugepages/hugepages-1048576kB/nr_hugepages

echo '';echo '[THP]'
echo -n 'enabled: '
cat /sys/kernel/mm/transparent_hugepage/enabled
echo -n 'defrag: '
cat /sys/kernel/mm/transparent_hugepage/defrag
echo -n 'use zero page: '
cat /sys/kernel/mm/transparent_hugepage/use_zero_page

echo '';echo '[git]'; git rev-parse HEAD
