/*
 * Nibble - Concurrent Log-Structured Memory for Many-Core Key-Value Stores
 *
 * (c) 2017 Hewlett Packard Enterprise Development LP.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the
 * GNU Lesser General Public License as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version. This program is distributed in the hope that
 * it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with this program.
 * If not, see <http://www.gnu.org/licenses/>. As an exception, the copyright holders of this Library
 * grant you permission to (i) compile an Application with the Library, and (ii) distribute the Application
 * containing code generated by the Library and added to the Application during this compilation process
 * under terms of your choice, provided you also meet the terms and conditions of the Application license.
 */


#ifndef TRACEFMT_H_INCLUDED
#define TRACEFMT_H_INCLUDED

// keep consistent with src/kvs/trace.rs
using OpType = uint8_t;
enum class Op: OpType {
    GET = 0, SET, DEL
};

struct entry {
    uint64_t key;
    uint8_t op;
    uint32_t size;

    entry(uint64_t key, Op op, uint32_t size) :
        key(key), op(static_cast<OpType>(op)), size(size) { }
} __attribute__((packed));

#endif
